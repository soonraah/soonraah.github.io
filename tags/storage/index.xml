<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Storage on Froglog</title>
    <link>https://soonraah.github.io/tags/storage/</link>
    <description>Recent content in Storage on Froglog</description>
    <image>
      <title>Froglog</title>
      <url>https://soonraah.github.io/image/brand/soonraah_full.png</url>
      <link>https://soonraah.github.io/image/brand/soonraah_full.png</link>
    </image>
    <generator>Hugo -- 0.147.3</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 17 Mar 2024 21:30:00 +0900</lastBuildDate>
    <atom:link href="https://soonraah.github.io/tags/storage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>読書メモ: DMBOK2 第6章 データストレージとオペレーション</title>
      <link>https://soonraah.github.io/posts/dmbok-chapter-6/</link>
      <pubDate>Sun, 17 Mar 2024 21:30:00 +0900</pubDate>
      <guid>https://soonraah.github.io/posts/dmbok-chapter-6/</guid>
      <description>&lt;h2 id=&#34;このポストについて&#34;&gt;このポストについて&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.dama-japan.org/Introduction.html&#34;&gt;DMBOK2&lt;/a&gt; を読み進めていくシリーズ。&lt;br&gt;
今回は第5章「データストレージとオペレーション」について。&lt;br&gt;
主にデータベースの運用に関する内容となっており、いわゆるデータベースエンジニアの人には当たり前の話？が書かれている。&lt;/p&gt;
&lt;p&gt;以降、特に注釈のない引用は DMBOK2 第6章からの引用とする。&lt;/p&gt;
&lt;h2 id=&#34;データストレージとオペレーションとは&#34;&gt;データストレージとオペレーションとは&lt;/h2&gt;
&lt;p&gt;以下のように定義されている。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;データの価値を最大化するために、永続化されるデータを設計し、実装し、サポートすること&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;主にデータベース管理者 (DBA: Database Administrators) が行うことになる。&lt;br&gt;
次の2つのアクティビティが含まれる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;データベースサポート: データベース環境の初期実装からデータの取得、バックアップ、廃棄までのデータライフサイクル関連アクティビティ&lt;/li&gt;
&lt;li&gt;データベース技術サポート: 技術要件を決め、技術的なアーキテクチャを定義し、技術を実装・管理する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;事業がデータに依存する企業においてはデータストレージとオペレーションのアクティビティは事業の継続性のために必要不可欠である。&lt;br&gt;
ゴールは次のとおり&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;データライフサイクル全体にわたるデータの可用性を管理する&lt;/li&gt;
&lt;li&gt;データ資産の完全性を保証する&lt;/li&gt;
&lt;li&gt;データ処理の性能を管理する&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;概念用語など&#34;&gt;概念・用語など&lt;/h2&gt;
&lt;h3 id=&#34;データベースアーキテクチャの種類&#34;&gt;データベースアーキテクチャの種類&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;集中型データベース: 単一システム内で使うデータを一箇所にまとている&lt;/li&gt;
&lt;li&gt;分散型データベース: 多数のノードにデータが配置される&lt;/li&gt;
&lt;li&gt;連邦型データベース: 自立した複数のデータベースシステムを単一の連邦型データベースに割り当てる&lt;/li&gt;
&lt;li&gt;仮想化／クラウドプラットフォーム: クラウド上のデータベースを実装&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;データベース処理のタイプ&#34;&gt;データベース処理のタイプ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ACID: トランザクションの信頼性のための制約
&lt;ul&gt;
&lt;li&gt;原子性 (Atomicity): 操作はすべて実行されるかまったく実行されないかのどちらか&lt;/li&gt;
&lt;li&gt;一貫性 (Consistency): トランザクションはシステムが定義するすべてのルールを常に満たさなければならない&lt;/li&gt;
&lt;li&gt;独立性 (Isolation): 各トランザクションは実行中の他のトランザクションの影響を受けない&lt;/li&gt;
&lt;li&gt;永続性 (Durability): トランザクションは完了すると元に戻せない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BASE: データの量と多様性を受けた、ACID とは異なる考え
&lt;ul&gt;
&lt;li&gt;基本的に利用可能 (Basically Available): ノードの障害発生時もあるレベル以上の可用性を保証する&lt;/li&gt;
&lt;li&gt;ソフトステート (Soft State): データは一定の変動状態にある&lt;/li&gt;
&lt;li&gt;最終的な一貫性の確保 (Eventual Consistency): データは最終的にすべてのノードで一貫性を保つが、各トランザクションの一貫性が常に確保されているわけではない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CAP: 分散システムでは以下のどれか2つしか満たせない
&lt;ul&gt;
&lt;li&gt;一貫性 (Consistency): システムは常に想定どおり動作できなければならない&lt;/li&gt;
&lt;li&gt;可用性 (Availability): システムは要求時に利用可能でなければならに&lt;/li&gt;
&lt;li&gt;分断耐性 (Partition Tolerance): システムは部分的な障害の発生時に運用を続行できなければならない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;データベース構成&#34;&gt;データベース構成&lt;/h3&gt;
&lt;p&gt;上から順により制御された構造であり、かつ古くからあるものとなっている。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
